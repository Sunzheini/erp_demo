# Generated by Django 4.2.1 on 2023-07-06 05:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('nonconformity_mng', '0005_remove_nonconformity_systematic_actions_and_more'),
        ('opportunity_mng', '0004_opportunitiestoactions_opportunity_long_term_action'),
        ('supplier_mng', '0001_initial'),
        ('kpi_mng', '0003_kpi_actual_06_23_kpi_actual_07_23_kpi_actual_08_23_and_more'),
        ('risk_mng', '0004_alter_risk_long_term_action_and_more'),
        ('resource_mng', '0003_resourcesassignedtoprocess'),
    ]

    operations = [
        migrations.CreateModel(
            name='ManagementReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=99, unique=True)),
                ('date', models.DateField()),
                ('status_from_previous_reviews', models.TextField(blank=True, null=True)),
                ('external_and_internal_changes', models.TextField(blank=True, null=True)),
                ('customer_feedback', models.TextField(blank=True, null=True)),
                ('other_kpis', models.TextField(blank=True, null=True)),
                ('audit_results', models.TextField(blank=True, null=True)),
                ('costs_of_poor_quality', models.TextField(blank=True, null=True)),
                ('manufacturing_feasibility', models.TextField(blank=True, null=True)),
                ('other_topics', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ManagementReviewToSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('management_review_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review_mng.managementreview')),
                ('supplier_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier_mng.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='ManagementReviewToRisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('management_review_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review_mng.managementreview')),
                ('risk_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risk_mng.risk')),
            ],
        ),
        migrations.CreateModel(
            name='ManagementReviewToResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('management_review_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review_mng.managementreview')),
                ('resource_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource_mng.resource')),
            ],
        ),
        migrations.CreateModel(
            name='ManagementReviewToOpportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('management_review_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review_mng.managementreview')),
                ('opportunity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opportunity_mng.opportunity')),
            ],
        ),
        migrations.CreateModel(
            name='ManagementReviewToNonconformity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('management_review_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review_mng.managementreview')),
                ('nonconformity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nonconformity_mng.nonconformity')),
            ],
        ),
        migrations.CreateModel(
            name='ManagementReviewToKpi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kpi_mng.kpi')),
                ('management_review_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review_mng.managementreview')),
            ],
        ),
        migrations.AddField(
            model_name='managementreview',
            name='kpis',
            field=models.ManyToManyField(blank=True, related_name='kpis', through='review_mng.ManagementReviewToKpi', to='kpi_mng.kpi'),
        ),
        migrations.AddField(
            model_name='managementreview',
            name='nonconformities',
            field=models.ManyToManyField(blank=True, related_name='nonconformities', through='review_mng.ManagementReviewToNonconformity', to='nonconformity_mng.nonconformity'),
        ),
        migrations.AddField(
            model_name='managementreview',
            name='opportunities',
            field=models.ManyToManyField(blank=True, related_name='opportunities', through='review_mng.ManagementReviewToOpportunity', to='opportunity_mng.opportunity'),
        ),
        migrations.AddField(
            model_name='managementreview',
            name='resources',
            field=models.ManyToManyField(blank=True, related_name='resources', through='review_mng.ManagementReviewToResource', to='resource_mng.resource'),
        ),
        migrations.AddField(
            model_name='managementreview',
            name='risks',
            field=models.ManyToManyField(blank=True, related_name='risks', through='review_mng.ManagementReviewToRisk', to='risk_mng.risk'),
        ),
        migrations.AddField(
            model_name='managementreview',
            name='suppliers',
            field=models.ManyToManyField(blank=True, related_name='suppliers', through='review_mng.ManagementReviewToSupplier', to='supplier_mng.supplier'),
        ),
    ]
